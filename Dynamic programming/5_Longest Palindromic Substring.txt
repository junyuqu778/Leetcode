class Solution {
public:
    string longestPalindrome(string s) {
        int len = s.length();
        if (len <2 )
        {
            return s;
        }
        vector<vector<bool>> dp(len, vector<bool>(len, false));
         int max_len = 1;
         int start = 0;
         for (int i = 1; i < len; ++i)
         {
             for (int j = 0; j < i; ++j)
             {
                 if (s[j] == s[i])
                 {
                     if ( i - j < 3)
                     {
                         dp[j][i] = true;
                     }
                     else 
                     {
                         dp[j][i] = dp[j+1][i-1];
                     }
                  if ( dp[j][i] == true)
                  {
                      int cur_len = i - j +1;
                      if (cur_len > max_len)
                      {
                           max_len = cur_len;
                           start = j;
                       }
                   }
                 }
             }
           }
           return s.substr(start, max_len);
    }
};